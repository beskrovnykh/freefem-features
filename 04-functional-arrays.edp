border Gamma(t=0, 2*pi){x=cos(t);y=sin(t);};

mesh Th = buildmesh(Gamma(20));

fespace Vh(Th, P1);
fespace Wh(Th, [P2,P2]);

int n = 2; //size of the array.

// Arrays of FE functions
Vh[int] v(n); // scalar case
Wh[int] [u1, u2](n); // vectorial case

v[0] = x+y;
v[1] = x-y;
[u1[0],u2[0]] = [x^2+y^2,y];
[u1[1],u2[1]] = [x^2-y^2,-y];

// Array of Arrays
real[int][int] V(10);
real[int] u = [1.0, 2.0, 3.0];

// Set sub arrays
V[0] = [1.0, 1.0];
cout << "Subarray V[0]:" << endl << V[0] << endl;

// Number of elements in subarrays may be different
V[1] = [u[0],u[1],u[2]];
cout << "Subarray V[1]:" << endl << V[1] << endl;
//
// V[1] = u; is not working
